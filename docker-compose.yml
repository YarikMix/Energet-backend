version: '3.5'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: ./api
    command: bash -c "npm run seed && npm run start:dev"
#    command: npm run start:dev
    environment:
      NODE_ENV: development
      PORT: 3000
#    network_mode: "host"
    volumes:
      - ./api/src:/app/api/src
    ports:
      - "8000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    links:
      - postgres
      - minio
      - configurator

  configurator:
     build:
       dockerfile: Dockerfile
       context: configurator
     command: npm run dev
     ports:
       - "5000:5000"
     environment:
       NODE_ENV: development
       PORT: 5000
     volumes:
       - ./configurator/src:/app/src

  postgres:
    image: postgres:15.0
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
       - postgres:/var/www/postgres/docker-volumes/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@admin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
       - pgadmin:/var/www/postgres/docker-volumes/pgadmin
    ports:
      - "127.0.0.1:5050:80"
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - minio-data:/data

  createbucket:
    image: minio/mc:latest
    container_name: createbucket
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 minio minio123;
      /usr/bin/mc mb s3/images;
      /usr/bin/mc anonymous set public s3/images;
      "

volumes:
  postgres:
  pgadmin:
  minio-data:
